@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "States";
}
<!--begin::Content-->
<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <!--begin::Entry-->
    <div class="d-flex flex-column-fluid">
        <!--begin::Container-->
        <div class="container">
            <!--begin::Card-->
            <div class="card card-custom">
                <div class="card-header flex-wrap border-0 pt-6 pb-0">
                    <div class="card-title">
                        <h3 class="card-label">
                            States
                        </h3>
                    </div>
                    <div class="card-toolbar">
                        <!--begin::Button-->
                        <a id="NewRecord" class="btn btn-primary font-weight-bolder">
                            <span class="svg-icon svg-icon-md">
                                <!--begin::Svg Icon | path:assets/media/svg/icons/Design/Flatten.svg-->
                                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                        <rect x="0" y="0" width="24" height="24" />
                                        <circle fill="#000000" cx="9" cy="15" r="6" />
                                        <path d="M8.8012943,7.00241953 C9.83837775,5.20768121 11.7781543,4 14,4 C17.3137085,4 20,6.6862915 20,10 C20,12.2218457 18.7923188,14.1616223 16.9975805,15.1987057 C16.9991904,15.1326658 17,15.0664274 17,15 C17,10.581722 13.418278,7 9,7 C8.93357256,7 8.86733422,7.00080962 8.8012943,7.00241953 Z" fill="#000000" opacity="0.3" />
                                    </g>
                                </svg>
                                <!--end::Svg Icon-->
                            </span>New Record
                        </a>
                        <!--end::Button-->
                    </div>
                </div>
                <div class="card-body">
                    <!--begin: Datatable-->
                    <table class="table table-bordered table-hover table-checkable" id="kt_datatable" style="margin-top: 13px !important">
                        <thead>
                            <tr>
                                <th>State Name</th>
                                <th style="max-width:20%">Actions</th>
                            </tr>
                        </thead>
                    </table>
                    <!--end: Datatable-->
                </div>
            </div>
            <!--end::Card-->
        </div>
        <!--end::Container-->
    </div>
    <!--end::Entry-->
</div>
<!--end::Content-->
<input type="hidden" id="RecordId" />
<div class="modal fade-rght" id="RecordModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel2">
    <form id="RecordModalForm">
        <div class="modal-dialog modal-right-dialog" role="document">
            <div class="modal-content modal-right-content">
                <div class="modal-header">
                    <h5 class="modal-title"><span id="RecordModalTitle">New</span> Record</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <i aria-hidden="true" class="ki ki-close"></i>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>State Name: </label>
                        <input type="text" id="ModalStateName" placeholder="state name here" required class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </form>
</div>
<style>
    .dataTables_filter{
        text-align:right;
    }
    .dataTables_filter label{
        text-align: left;
    }
    #kt_datatable_paginate{
        text-align:right;
    }
    .paging_simple_numbers{
        float:right;
    }
</style>
@section scripts
{
<script>

    $(document).ready(function () {
        var options = {
            ajax: {
                url: "../Api/State",
                method: "GET",
                dataSrc: ''
            },
            columns: [
                {
                    data: "name"
                },
                {
                    render: function (data, type, row) {
                        var btns = "<a class='btn btn-sm btn-clean btn-icon btnEdit' record-id='" + row.id + "' title='Edit'><i class='la la-edit'></i></a>"
                            + "<a class='btn btn-sm btn-clean btn-icon btnDelete' record-id='" + row.id + "' title='Delete'><i class='la la-trash'></i></a>";
                        return btns;
                    }
                }
            ],
        }
        var KtTable = $("#kt_datatable").DataTable(options);


        $("#NewRecord").click(function () {
            clearModalData();
            $("#RecordModalTitle").text("New");
            $("#RecordModal").modal("show");
        });

        $(document).on("click", ".btnDelete", function () {
            var btn = $(this);
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "../api/state/" + btn.attr("record-id"),
                        method: "DELETE",
                        success: function () {
                            console.log("success");
                            Swal.fire(
                                'Deleted!',
                                'Your file has been deleted.',
                                'success'
                            );
                            KtTable.ajax.reload();
                        },
                        error: function () {
                            console.log("error");
                            Swal.fire(
                                'Oops!',
                                'Something went wrong.',
                                'error'
                            )
                        }
                    });
                }
            })
        })

        $(document).on("click", ".btnEdit", function () {
            clearModalData();
            var btn = $(this);
            $.ajax({
                url: "../api/state/" + btn.attr("record-id"),
                type: "GET",
                success: function (data) {
                    $("#ModalStateName").val(data.name);
                    $("#RecordId").val(data.id);
                    $("#RecordModalTitle").text("Edit");
                    $("#RecordModal").modal("show");
                },
                error: function () {
                    toastr.error("Something went wrong");
                }
            })
        })

        $("#RecordModalForm").submit(function (e) {
            e.preventDefault();
            var RecordId = $("#RecordId").val();
            var stateDto = Object();
            stateDto.Name = $("#ModalStateName").val();
            if (RecordId == undefined || RecordId == null || RecordId <= 0) {
                $.ajax({
                    url: "../Api/State",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(stateDto),
                    success: function () {
                        Swal.fire(
                            'Saved!',
                            'Record saved successfully!',
                            'success'
                        );
                        KtTable.ajax.reload();
                        clearModalData();
                        $("#RecordModal").modal("hide");
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: xhr.responseText
                        });
                    }
                })
            } else {
                stateDto.Id = parseInt(RecordId);
                console.log(stateDto);
                $.ajax({
                    url: "../Api/State",
                    type: "PUT",
                    contentType: "application/json",
                    data: JSON.stringify(stateDto),
                    success: function () {
                        Swal.fire(
                            'Updated!',
                            'Record saved updated!',
                            'success'
                        );
                        KtTable.ajax.reload();
                        clearModalData();
                        $("#RecordModal").modal("hide");
                    },
                    error: function (xhr,state,error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: xhr.responseText
                        });
                    }
                });
            }
        });
        function clearModalData() {
            $("#ModalStateName").val("");
            $("#RecordId").val(0);
        }
    })
</script>
} 